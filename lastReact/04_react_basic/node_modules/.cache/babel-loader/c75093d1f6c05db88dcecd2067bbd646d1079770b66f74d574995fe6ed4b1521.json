{"ast":null,"code":"var _jsxFileName = \"/Users/kohtakochi/Desktop/programming/lang/React/lastReact/04_react_basic/src/087_practice_expr/start/Example.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst title = \"Expression\";\nconst array = [\"item1\", \"item2\", \"item3\"];\nconst fn = arg => {\n  return `${arg} Function`;\n};\nconst upperCaseText = \"UpperCaseText\";\nconst Example = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fragment\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Hello JSX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: upperCaseText.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Hello \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: array\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: fn(hello)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["title","array","fn","arg","upperCaseText","Example","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","hello","_c","$RefreshReg$"],"sources":["/Users/kohtakochi/Desktop/programming/lang/React/lastReact/04_react_basic/src/087_practice_expr/start/Example.js"],"sourcesContent":["const title = \"Expression\";\nconst array = [\"item1\", \"item2\", \"item3\"];\nconst fn = (arg) => {\n  return `${arg} Function`;\n};\nconst upperCaseText = \"UpperCaseText\";\n\nconst Example = () => {\n  return (\n    <div className=\"fragment\">\n      <h3>Hello JSX</h3>\n      <h3>{upperCaseText.toUpperCase()}</h3>\n      <h3>Hello {title}</h3>\n      <h3>{array}</h3>\n      <h3>{fn(hello)}</h3>\n    </div>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,MAAMA,KAAK,GAAG,YAAY;AAC1B,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;AACzC,MAAMC,EAAE,GAAIC,GAAG,IAAK;EAClB,OAAQ,GAAEA,GAAI,WAAU;AAC1B,CAAC;AACD,MAAMC,aAAa,GAAG,eAAe;AAErC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,oBACEC,OAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBF,OAAA;MAAAE,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClBN,OAAA;MAAAE,QAAA,EAAKJ,aAAa,CAACS,WAAW;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACtCN,OAAA;MAAAE,QAAA,GAAI,QAAM,EAACR,KAAK;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACtBN,OAAA;MAAAE,QAAA,EAAKP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChBN,OAAA;MAAAE,QAAA,EAAKN,EAAE,CAACY,KAAK;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChB;AAEV,CAAC;AAACG,EAAA,GAVIV,OAAO;AAYb,eAAeA,OAAO;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}