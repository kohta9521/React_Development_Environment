{"ast":null,"code":"var _jsxFileName = \"/Users/kohtakochi/Desktop/programming/lang/React/lastReact/05_state_and_event/src/090_practice_state_props/start/Example.js\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = Example;\nconst CountResult = ( /* propsを定義 */\n) => /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n_c2 = CountResult;\nconst CountUpdate = ( /* propsを定義 */\n) => {\n  const countUp = () => {\n    /* countに1追加 */\n  };\n  const countDown = () => {\n    /* countから1マイナス */\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c3 = CountUpdate;\nexport default Example;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"CountResult\");\n$RefreshReg$(_c3, \"CountUpdate\");","map":{"version":3,"names":["Example","_jsxDEV","_Fragment","_c","CountResult","fileName","_jsxFileName","lineNumber","columnNumber","_c2","CountUpdate","countUp","countDown","children","onClick","_c3","$RefreshReg$"],"sources":["/Users/kohtakochi/Desktop/programming/lang/React/lastReact/05_state_and_event/src/090_practice_state_props/start/Example.js"],"sourcesContent":["const Example = () => {\n  return (\n    <>\n      {/* このコメントアウトを外して利用！\n        <CountResult title=\"カウント\" />\n        <CountUpdate /> \n      */}\n    </>\n  );\n};\nconst CountResult = (/* propsを定義 */) => (\n  <h3>{/* propsのtitleとcountの値を表示 */}</h3>\n);\n\nconst CountUpdate = (/* propsを定義 */) => {\n  const countUp = () => {\n    /* countに1追加 */\n  };\n  const countDown = () => {\n    /* countから1マイナス */\n  };\n  return (\n    <>\n      <button onClick={countUp}>+</button>\n      <button onClick={countDown}>-</button>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;;AAAA,MAAMA,OAAO,GAAGA,CAAA,KAAM;EACpB,oBACEC,OAAA,CAAAC,SAAA,oBAKG;AAEP,CAAC;AAACC,EAAA,GATIH,OAAO;AAUb,MAAMI,WAAW,GAAGA,CAAA,CAAC;AAAA,kBACnBH,OAAA;EAAAI,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACD;AAACC,GAAA,GAFIL,WAAW;AAIjB,MAAMM,WAAW,GAAGA,CAAA,CAAC;AAAA,KAAmB;EACtC,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB;EAAA,CACD;EACD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB;EAAA,CACD;EACD,oBACEX,OAAA,CAAAC,SAAA;IAAAW,QAAA,gBACEZ,OAAA;MAAQa,OAAO,EAAEH,OAAQ;MAAAE,QAAA,EAAC;IAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACpCP,OAAA;MAAQa,OAAO,EAAEF,SAAU;MAAAC,QAAA,EAAC;IAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBACrC;AAEP,CAAC;AAACO,GAAA,GAbIL,WAAW;AAejB,eAAeV,OAAO;AAAC,IAAAG,EAAA,EAAAM,GAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}